C
1. 대소문자 구분.
2. 항상 main함수로 시작. main은 프로그램의 시작점이 되며 이름이 고정.
3. 모든 문장은 세미콜론으로 끝난다. 컴파일러는 세미콜론을 기준으로 어디서 어디까지가 한문장인지를 구분.
4. C프로그램의 구조

#include <...>
함수
함수
함수
int main(){
	코드
}



printf
printf("서식문자열"[,인수,인수,....]);
%d 10진 정수로 출력
%c 1개의 문자를 출력
%s 문자열을 출력
%f 고정 소수점 형식의 실수로 출력 기본적으로는 소수 6번째 자리수까지!

scanf
scanf("서식문자열",&변수[,&변수,...]);
scanf로 문자열을 받을 때에는 &를 붙이지 않는다.



정수형
char 1바이트 -128~127
int 4바이트 부호 있음 -> 운영체제가 64비트 일경우 8바이트
short 2바이트 부호 있음
long 4바이트 부호 있음

실수형
float 4바이트
double 8바이트



조건문
if문: if(조건) 명령; 또는 if(조건){명령들}

for 반복문
for문: for(초기식;조건식;증감식) 명령;
초기식: 반복문은 보통 특정 변수가 일정한 범위에 있는 동안에 실행된다. 이 떄 반복문을 통제하는 변수를 제어 변수. 초기식은 제어 변수의 초기 값을 지정.
조건식: 반복문이 언제까지 실행 될 것인가. 이 조건이 참인동안 계속 루프.
증감식: 한번 루프를 돌 때 제어 변수를 얼마나 증감시킬 것인가
명령: 반복 실행 될 명령. { }를 둘러싸인 복문이 올 수도 있다.

while 반복문
while (조건) {명령들};
while (TRUE) 명령; (break문이 있어야 한다)



그 외의 제어문
break
여러 개의 루프가 중첩되어 있는 다중 루프에서 break문이 사용되면 현재 루프 하나만 탈출
flag=0;
for (i=...) {
     for (j=...) {
          flag=1;
          break;
     }
     if (flag == 1) break;
}
//2중루프 탈출법. 탈출 변수.

continue
루프의 나머지 부분을 무시하고 조건 점검부로 점프하여 루프의 다음 값을 싱행하도록 하는 명령.
continue도 break문과 마찬가지로 다중 루프 내에서 사용 될 때 제일 안쪽 루프의 선두로만 돌아간다.
바깥쪽 루프의 선두로 가고 싶을 경우 break처럼 탈출 변수 이용.



배열
타입 배열명[크기],[크기]...;
타입: 배열이 어떤 값들의 집합인가. int, char, double...
크기: 요소의 개수가 몇개인가를 []괄호안에 정수 상수로 지정.

int rate[5]; //정수형 변수 5개의 집합인 배열 rate선언

int score[30];
for (i=0;i<30;i++)
     scanf("%d",&score[i]);

구조체
struct{멤버 목록} 변수명;
struct {
     char Name[10];
     int Age;
     double Height;
} Friend;

구조체의 멤버를 참조할 때는 .(점)연산자를 사용하여 구조체.멤버 식으로 적으면 된다.
Friend.Age=28;
printf("내 친구 이름은 %s이다",Friend.Name);



포인터
타입 *변수명;
int *pi; -> pi는 임의의 정수형 번수가 기억된 번지를 가질 수 있다.
*: 포인터가 가리키는 번지의 값을 읽는다.
&: 변수가 기억되어 있는 메모리 번지를 읽는다.
